__author__ = 'davidsiecinski'

import unittest
import imageReader
import mock

class  MainTest (unittest.TestCase):

    def setUp(self):
        self.pixel_list=[[21.1404, 21.1404, 21.1404, 21.1404, 18.7817, 18.7817, 19.7817, 20.7817, 18.7817, 20.7817, 19.7817, 18.7817, 19.5692, 18.569200000000002, 18.569200000000002, 20.569200000000002, 21.0, 22.0, 22.0, 20.0], [20.0, 21.0, 21.0, 22.0, 22.0, 22.0, 20.569200000000002, 20.569200000000002, 19.7817, 20.7817, 19.7817, 19.7817, 20.7817, 23.1404, 22.1404, 20.1404, 22.0, 19.0, 22.0, 26.0], [22.2183, 22.2183, 22.2183, 20.8596, 20.8596, 20.8596, 21.0, 20.0, 22.0, 21.0, 21.0, 20.0, 20.1404, 21.1404, 21.1404, 19.1404, 21.1404, 21.1404, 34.1404, 51.14039999999999], [23.2183, 22.2183, 21.2183, 21.2183, 21.2183, 22.2183, 20.8596, 19.8596, 19.8596, 23.0, 23.0, 23.0, 23.0, 22.0, 26.430799999999998, 33.430800000000005, 35.0, 44.0, 64.0, 81.0], [22.430799999999998, 22.430799999999998, 22.430799999999998, 22.430799999999998, 23.430800000000005, 23.430800000000005, 23.430800000000005, 23.2183, 20.218300000000003, 21.8596, 20.218300000000003, 20.218300000000003, 26.8654, 34.8654, 52.8654, 76.8654, 95.00000000000001, 112.0, 127.0, 133.0], [21.9241, 22.5712, 22.5712, 23.5712, 22.5712, 21.4308, 21.4308, 21.2183, 23.2183, 26.218299999999996, 26.8654, 31.8654, 46.86540000000001, 63.86540000000001, 89.8654, 118.8654, 147.8596, 165.85959999999997, 174.8596, 173.8596], [21.5712, 22.5712, 22.5712, 22.5712, 21.5712, 21.4308, 22.0, 23.0, 24.000000000000004, 36.0, 55.8596, 82.8596, 108.8596, 132.2183, 150.2183, 163.2183, 166.99999999999997, 174.0, 176.0, 174.0], [20.8596, 21.8596, 21.0, 20.0, 21.0, 24.000000000000004, 29.000000000000004, 34.0, 50.0, 65.1404, 98.1404, 137.1404, 168.56539999999998, 191.5654, 199.5654, 194.5654, 191.1404, 185.14040000000003, 180.14040000000003, 178.1404], [17.0759, 20.0759, 20.434600000000003, 18.4346, 27.859600000000004, 40.8596, 64.0, 101.00000000000001, 128.1404, 152.1404, 173.56539999999998, 187.7058, 202.7058, 211.05870000000002, 211.05870000000002, 211.1991, 207.9241, 203.92409999999998, 199.9241, 196.9241], [23.0759, 25.0759, 30.075899999999997, 38.4288, 51.8596, 71.8596, 111.8596, 157.0, 197.00000000000003, 216.14039999999997, 226.14040000000003, 224.5654, 222.92409999999998, 220.1366, 216.1366, 214.13660000000002, 208.4308, 203.4308, 197.4308, 193.4308], [40.7817, 49.7817, 74.0, 107.0, 135.0, 155.8596, 183.2183, 205.2183, 213.8654, 221.8654, 224.86540000000002, 216.8654, 207.2962, 196.2962, 183.2962, 171.2962, 161.30580000000003, 154.3058, 145.3058, 139.3058], [67.7058, 89.7058, 121.5654, 164.57120000000003, 197.4308, 214.2183, 222.2962, 219.08370000000002, 217.5904, 209.0933, 198.0933, 185.7404, 172.60000000000002, 160.6, 145.6, 130.60000000000002, 120.4654, 114.46540000000002, 105.4654, 99.4654], [125.13660000000002, 154.9241, 181.3549, 196.7895, 198.6491, 185.7991, 171.4462, 160.5241, 142.9587, 130.03660000000002, 118.68370000000002, 111.3308, 103.1904, 97.1904, 91.7654, 84.7654, 84.1962, 80.1962, 76.1962, 74.1962], [171.3645, 188.93949999999998, 199.9395, 198.2299, 178.66449999999998, 149.9549, 124.3895, 111.3953, 95.1145, 78.76160000000002, 66.2645, 58.9116, 53.6991, 51.6991, 54.55870000000001, 55.5587, 55.98950000000001, 54.9895, 53.98950000000001, 53.98950000000001], [152.1712, 140.1712, 128.9587, 119.0366, 106.8241, 96.25489999999999, 84.1145, 78.4049, 70.6953, 63.270300000000006, 58.2703, 57.7011, 57.560700000000004, 57.560700000000004, 56.56070000000001, 55.5607, 55.5607, 55.5607, 56.56070000000001, 56.56070000000001], [131.9, 103.3308, 79.33080000000001, 60.330799999999996, 51.5491, 55.2645, 54.91160000000001, 54.270300000000006, 55.2703, 58.701100000000004, 57.7011, 56.701100000000004, 57.1319, 58.4848, 58.4848, 57.4848, 56.701100000000004, 57.7011, 57.7011, 57.7011], [88.2703, 78.27029999999999, 66.2703, 57.270300000000006, 55.2703, 55.2703, 55.2703, 54.270300000000006, 55.2703, 55.2703, 55.2703, 55.2703, 55.2703, 56.270300000000006, 55.2703, 55.2703, 55.2703, 55.2703, 55.2703, 55.2703], [56.270300000000006, 55.2703, 54.270300000000006, 54.270300000000006, 56.270300000000006, 56.270300000000006, 55.2703, 54.270300000000006, 55.2703, 55.2703, 55.2703, 55.2703, 56.270300000000006, 56.270300000000006, 56.270300000000006, 55.2703, 56.270300000000006, 56.270300000000006, 56.270300000000006, 56.270300000000006], [56.270300000000006, 56.270300000000006, 55.2703, 54.270300000000006, 54.270300000000006, 54.270300000000006, 54.270300000000006, 55.2703, 55.2703, 55.2703, 55.2703, 55.2703, 56.270300000000006, 56.270300000000006, 56.270300000000006, 56.270300000000006, 56.270300000000006, 56.270300000000006, 56.270300000000006, 56.270300000000006], [54.270300000000006, 55.2703, 56.270300000000006, 56.270300000000006, 56.270300000000006, 56.270300000000006, 56.270300000000006, 57.270300000000006, 55.2703, 55.2703, 55.2703, 55.2703, 56.270300000000006, 56.270300000000006, 56.270300000000006, 56.270300000000006, 56.270300000000006, 56.270300000000006, 56.270300000000006, 56.270300000000006]]
        imageReader.loadImage = mock.MagicMock(return_value=self.pixel_list)

    def test_image_load(self):
        self.assertEqual(imageReader.loadImage("dummy_path.jpg"),self.pixel_list)